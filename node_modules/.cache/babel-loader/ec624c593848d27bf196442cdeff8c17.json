{"ast":null,"code":"var _jsxFileName = \"/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\n\nfunction App() {\n  let [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"HTML&CSS\",\n    isDone: false\n  }, {\n    id: 2,\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: 3,\n    title: \"GIT\",\n    isDone: true\n  }, {\n    id: 4,\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: 5,\n    title: \"RestAPI\",\n    isDone: true\n  }, {\n    id: 6,\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  let [filter, setFilter] = useState(\"All\");\n  let tasksForTodoList = tasks;\n\n  if (filter === \"Active\") {\n    tasksForTodoList = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"Completed\") {\n    tasksForTodoList = tasks.filter(t => t.isDone === true);\n  }\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n\n  function changeFilter(value) {\n    setFilter(value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    todolistTitle: \"What to learn\",\n    button: \"Ok\",\n    tasks: tasksForTodoList,\n    removeTask: removeTask,\n    changeFilter: changeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/App.tsx"],"names":["React","useState","Todolist","App","tasks","setTasks","id","title","isDone","filter","setFilter","tasksForTodoList","t","removeTask","filteredTasks","changeFilter","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAIA,SAASC,GAAT,GAAe;AACX,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC7B;AAACK,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,UAAf;AAA2BC,IAAAA,MAAM,EAAE;AAAnC,GAD6B,EAE7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,IAAf;AAAqBC,IAAAA,MAAM,EAAE;AAA7B,GAF6B,EAG7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,KAAf;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAH6B,EAI7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAJ6B,EAK7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAL6B,EAM7B;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAN6B,CAAD,CAAhC;AASA,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAkB,KAAlB,CAAlC;AACA,MAAIU,gBAAgB,GAAGP,KAAvB;;AACA,MAAIK,MAAM,KAAK,QAAf,EAAyB;AACrBE,IAAAA,gBAAgB,GAAGP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAa,KAA/B,CAAnB;AACH;;AACD,MAAIC,MAAM,KAAK,WAAf,EAA4B;AACxBE,IAAAA,gBAAgB,GAAGP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAa,IAA/B,CAAnB;AACH;;AAED,WAASK,UAAT,CAAoBP,EAApB,EAAgC;AAC5B,QAAIQ,aAAa,GAAGV,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACN,EAAF,IAAQA,EAA1B,CAApB;AACAD,IAAAA,QAAQ,CAACS,aAAD,CAAR;AACH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA8C;AAC1CN,IAAAA,SAAS,CAACM,KAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAC,eAAxB;AACU,IAAA,MAAM,EAAC,IADjB;AAEU,IAAA,KAAK,EAAEL,gBAFjB;AAGU,IAAA,UAAU,EAAEE,UAHtB;AAIU,IAAA,YAAY,EAAEE,YAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH;;AAED,eAAeZ,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\n\r\nexport type FilterValueType = \"All\" | \"Active\" | \"Completed\";\r\n\r\nfunction App() {\r\n    let [tasks, setTasks] = useState([\r\n        {id: 1, title: \"HTML&CSS\", isDone: false},\r\n        {id: 2, title: \"JS\", isDone: true},\r\n        {id: 3, title: \"GIT\", isDone: true},\r\n        {id: 4, title: \"ReactJS\", isDone: false},\r\n        {id: 5, title: \"RestAPI\", isDone: true},\r\n        {id: 6, title: \"GraphQL\", isDone: false}\r\n    ]);\r\n\r\n    let [filter, setFilter] = useState<FilterValueType>(\"All\")\r\n    let tasksForTodoList = tasks;\r\n    if (filter === \"Active\") {\r\n        tasksForTodoList = tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (filter === \"Completed\") {\r\n        tasksForTodoList = tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    function removeTask(id: number) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks)\r\n    }\r\n\r\n    function changeFilter(value: FilterValueType) {\r\n        setFilter(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist todolistTitle=\"What to learn\"\r\n                      button=\"Ok\"\r\n                      tasks={tasksForTodoList}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}