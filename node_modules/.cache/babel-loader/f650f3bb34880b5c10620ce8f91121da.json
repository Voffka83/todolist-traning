{"ast":null,"code":"var _jsxFileName = \"/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  let [title, setTitle] = useState(\"\");\n\n  let addTasks = () => {\n    props.addTasks(title);\n    setTitle(\"\");\n  };\n\n  let onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  let onKeyPresHandler = e => {\n    if (e.charCode === 13) {\n      addTasks();\n    }\n  };\n\n  let onAllClickHandler = () => {\n    props.changeFilter(\"All\");\n  };\n\n  let onActiveClickHandler = () => {\n    props.changeFilter(\"Active\");\n  };\n\n  let onCompletedClickHandler = () => {\n    props.changeFilter(\"Completed\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, props.todolistTitle), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPresHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, props.button)), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, props.tasks.map(t => /*#__PURE__*/React.createElement(\"li\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: t.isDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 69\n    }\n  }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.removeTask(t.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"-x-\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/Todolist.tsx"],"names":["React","useState","Todolist","props","title","setTitle","addTasks","onChangeHandler","e","currentTarget","value","onKeyPresHandler","charCode","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","todolistTitle","button","tasks","map","t","id","isDone","removeTask"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAkBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAC3C,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,MAAIK,QAAQ,GAAG,MAAM;AACjBH,IAAAA,KAAK,CAACG,QAAN,CAAeF,KAAf;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAIA,MAAIE,eAAe,GAAIC,CAAD,IAAsC;AACxDH,IAAAA,QAAQ,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,MAAIC,gBAAgB,GAAIH,CAAD,IAAwC;AAC3D,QAAIA,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBN,MAAAA,QAAQ;AACX;AACJ,GAJD;;AAMA,MAAIO,iBAAiB,GAAG,MAAM;AAC1BV,IAAAA,KAAK,CAACW,YAAN,CAAmB,KAAnB;AACH,GAFD;;AAGA,MAAIC,oBAAoB,GAAG,MAAM;AAC7BZ,IAAAA,KAAK,CAACW,YAAN,CAAmB,QAAnB;AACH,GAFD;;AAGA,MAAIE,uBAAuB,GAAG,MAAM;AAChCb,IAAAA,KAAK,CAACW,YAAN,CAAmB,WAAnB;AACH,GAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACc,aAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEb,KAAd;AACO,IAAA,QAAQ,EAAEG,eADjB;AAEO,IAAA,UAAU,EAAEI,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,KAAK,CAACe,MAAlC,CANJ,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjB;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAED,CAAC,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,oBAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,CAAC,CAACjB,KAAT,CAD3B,eAEjB;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACD,MAAAA,KAAK,CAACqB,UAAN,CAAiBH,CAAC,CAACC,EAAnB;AAAuB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFiB,CAArB,CAFR,CAVJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAET,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAnBJ,CADJ;AA2BH","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {FilterValueType} from \"./App\";\n\ntype TasksType = {\n    id: string,\n    title: string,\n    isDone: boolean\n}\n\ntype TodolistProps = {\n    todolistTitle: string\n    button: string\n    tasks: Array<TasksType>\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTasks: (title: string) => void\n}\n\nexport function Todolist(props: TodolistProps) {\n    let [title, setTitle] = useState(\"\")\n\n    let addTasks = () => {\n        props.addTasks(title)\n        setTitle(\"\")\n    }\n    let onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    let onKeyPresHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) {\n            addTasks()\n        }\n    }\n\n    let onAllClickHandler = () => {\n        props.changeFilter(\"All\")\n    }\n    let onActiveClickHandler = () => {\n        props.changeFilter(\"Active\")\n    }\n    let onCompletedClickHandler = () => {\n        props.changeFilter(\"Completed\")\n    }\n\n\n    return (\n        <div>\n            <h3>{props.todolistTitle}</h3>\n            <div>\n                <input value={title}\n                       onChange={onChangeHandler}\n                       onKeyPress={onKeyPresHandler}\n                />\n\n                <button onClick={addTasks}>{props.button}</button>\n            </div>\n            <ul>\n                {\n                    props.tasks.map(t => <li key={t.id}>\n                        <input type=\"checkbox\" checked={t.isDone}/> <span>{t.title}</span>\n                        <button onClick={() => {props.removeTask(t.id)}}>-x-</button>\n                    </li>)\n                }\n            </ul>\n\n            <div>\n                <button onClick={onAllClickHandler}>All</button>\n                <button onClick={onActiveClickHandler}>Active</button>\n                <button onClick={onCompletedClickHandler}>Completed</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}