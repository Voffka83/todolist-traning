{"ast":null,"code":"var _jsxFileName = \"/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/Todolist.tsx\";\nimport React, { useState } from 'react';\nexport function Todolist(props) {\n  let [title, setTitle] = useState(\"\");\n\n  let addTasks = () => {\n    props.addTasks(title);\n    setTitle(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, props.todolistTitle), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => {\n      setTitle(e.currentTarget.value);\n    },\n    onKeyPress: e => {\n      if (e.charCode === 13) {\n        addTasks();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, props.button)), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, props.tasks.map(t => /*#__PURE__*/React.createElement(\"li\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: t.isDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 69\n    }\n  }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.removeTask(t.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"-x-\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.changeFilter(\"All\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.changeFilter(\"Active\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      props.changeFilter(\"Completed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/Todolist.tsx"],"names":["React","useState","Todolist","props","title","setTitle","addTasks","todolistTitle","e","currentTarget","value","charCode","button","tasks","map","t","id","isDone","removeTask","changeFilter"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAkBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAC3C,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,MAAIK,QAAQ,GAAG,MAAM;AACjBH,IAAAA,KAAK,CAACG,QAAN,CAAeF,KAAf;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACI,aAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEH,KAAd;AACO,IAAA,QAAQ,EAAGI,CAAD,IAAO;AAACH,MAAAA,QAAQ,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AAAgC,KADzD;AAEO,IAAA,UAAU,EAAGF,CAAD,IAAO;AAAC,UAAIA,CAAC,CAACG,QAAF,KAAe,EAAnB,EAAuB;AAACL,QAAAA,QAAQ;AAAG;AAAC,KAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEA,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,KAAK,CAACS,MAAlC,CANJ,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjB;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAED,CAAC,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,oBAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,CAAC,CAACX,KAAT,CAD3B,eAEjB;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACD,MAAAA,KAAK,CAACe,UAAN,CAAiBH,CAAC,CAACC,EAAnB;AAAuB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFiB,CAArB,CAFR,CAVJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACb,MAAAA,KAAK,CAACgB,YAAN,CAAmB,KAAnB;AAA0B,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAChB,MAAAA,KAAK,CAACgB,YAAN,CAAmB,QAAnB;AAA6B,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAChB,MAAAA,KAAK,CAACgB,YAAN,CAAmB,WAAnB;AAAgC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAnBJ,CADJ;AA2BH","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {FilterValueType} from \"./App\";\n\ntype TasksType = {\n    id: string,\n    title: string,\n    isDone: boolean\n}\n\ntype TodolistProps = {\n    todolistTitle: string\n    button: string\n    tasks: Array<TasksType>\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValueType) => void\n    addTasks: (title: string) => void\n}\n\nexport function Todolist(props: TodolistProps) {\n    let [title, setTitle] = useState(\"\")\n\n    let addTasks = () => {\n        props.addTasks(title)\n        setTitle(\"\")\n    }\n\n    return (\n        <div>\n            <h3>{props.todolistTitle}</h3>\n            <div>\n                <input value={title}\n                       onChange={(e) => {setTitle(e.currentTarget.value)}}\n                       onKeyPress={(e) => {if (e.charCode === 13) {addTasks()}}}\n                />\n\n                <button onClick={addTasks}>{props.button}</button>\n            </div>\n            <ul>\n                {\n                    props.tasks.map(t => <li key={t.id}>\n                        <input type=\"checkbox\" checked={t.isDone}/> <span>{t.title}</span>\n                        <button onClick={() => {props.removeTask(t.id)}}>-x-</button>\n                    </li>)\n                }\n            </ul>\n\n            <div>\n                <button onClick={() => {props.changeFilter(\"All\")}}>All</button>\n                <button onClick={() => {props.changeFilter(\"Active\")}}>Active</button>\n                <button onClick={() => {props.changeFilter(\"Completed\")}}>Completed</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}