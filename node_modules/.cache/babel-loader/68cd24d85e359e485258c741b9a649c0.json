{"ast":null,"code":"var _jsxFileName = \"/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { v1 } from 'uuid';\n\nfunction App() {\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"GIT\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"RestAPI\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  let [filter, setFilter] = useState(\"All\");\n  let tasksForTodoList = tasks;\n\n  if (filter === \"Active\") {\n    tasksForTodoList = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"Completed\") {\n    tasksForTodoList = tasks.filter(t => t.isDone === true);\n  }\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id !== id);\n    setTasks(filteredTasks);\n  }\n\n  function changeFilter(value) {\n    setFilter(value);\n  }\n\n  function addTasks(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n\n  function changeStatus(id, isDone) {\n    let task = tasks.find(t => t.id === id);\n\n    if (task) {\n      //псевдо истина/псевдо ложь это выражение\n      task.isDone = isDone;\n    }\n\n    setTasks([...tasks]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    todolistTitle: \"What to learn\",\n    button: \"Add\",\n    tasks: tasksForTodoList,\n    removeTask: removeTask,\n    changeFilter: changeFilter,\n    addTasks: addTasks,\n    changeStatus: changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Voffka/REACT+HTML+CSS+JS/IT-incubator/todolist traning/src/App.tsx"],"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","tasksForTodoList","t","removeTask","filteredTasks","changeFilter","value","addTasks","task","newTasks","changeStatus","find"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,EAAR,QAAiB,MAAjB;;AAKA,SAASC,GAAT,GAAe;AACX,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAC7B;AAACM,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,UAAlB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GAD6B,EAE7B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,IAAlB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAF6B,EAG7B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,KAAlB;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAH6B,EAI7B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAJ6B,EAK7B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAL6B,EAM7B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAN6B,CAAD,CAAhC;AASA,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAkB,KAAlB,CAAlC;AACA,MAAIW,gBAAgB,GAAGP,KAAvB;;AACA,MAAIK,MAAM,KAAK,QAAf,EAAyB;AACrBE,IAAAA,gBAAgB,GAAGP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAa,KAA/B,CAAnB;AACH;;AACD,MAAIC,MAAM,KAAK,WAAf,EAA4B;AACxBE,IAAAA,gBAAgB,GAAGP,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACJ,MAAF,KAAa,IAA/B,CAAnB;AACH;;AAED,WAASK,UAAT,CAAoBP,EAApB,EAAgC;AAC5B,QAAIQ,aAAa,GAAGV,KAAK,CAACK,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASA,EAA3B,CAApB;AACAD,IAAAA,QAAQ,CAACS,aAAD,CAAR;AACH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA8C;AAC1CN,IAAAA,SAAS,CAACM,KAAD,CAAT;AACH;;AAED,WAASC,QAAT,CAAkBV,KAAlB,EAAiC;AAC7B,QAAIW,IAAI,GAAG;AAACZ,MAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,MAAAA,KAAK,EAAEA,KAAlB;AAAyBC,MAAAA,MAAM,EAAE;AAAjC,KAAX;AACA,QAAIW,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGd,KAAV,CAAf;AACAC,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACH;;AAED,WAASC,YAAT,CAAsBd,EAAtB,EAAkCE,MAAlC,EAAmD;AAC/C,QAAIU,IAAI,GAAGd,KAAK,CAACiB,IAAN,CAAWT,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASA,EAAzB,CAAX;;AACA,QAAIY,IAAJ,EAAU;AAAG;AACTA,MAAAA,IAAI,CAACV,MAAL,GAAcA,MAAd;AACH;;AACDH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAC,eAAxB;AACU,IAAA,MAAM,EAAC,KADjB;AAEU,IAAA,KAAK,EAAEO,gBAFjB;AAGU,IAAA,UAAU,EAAEE,UAHtB;AAIU,IAAA,YAAY,EAAEE,YAJxB;AAKU,IAAA,QAAQ,EAAEE,QALpB;AAMU,IAAA,YAAY,EAAEG,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH;;AAED,eAAejB,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\nimport {v1} from 'uuid';\r\nimport {title} from 'process';\r\n\r\nexport type FilterValueType = \"All\" | \"Active\" | \"Completed\";\r\n\r\nfunction App() {\r\n    let [tasks, setTasks] = useState([\r\n        {id: v1(), title: \"HTML&CSS\", isDone: false},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"GIT\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false},\r\n        {id: v1(), title: \"RestAPI\", isDone: true},\r\n        {id: v1(), title: \"GraphQL\", isDone: false}\r\n    ]);\r\n\r\n    let [filter, setFilter] = useState<FilterValueType>(\"All\")\r\n    let tasksForTodoList = tasks;\r\n    if (filter === \"Active\") {\r\n        tasksForTodoList = tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (filter === \"Completed\") {\r\n        tasksForTodoList = tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id !== id);\r\n        setTasks(filteredTasks)\r\n    }\r\n\r\n    function changeFilter(value: FilterValueType) {\r\n        setFilter(value);\r\n    }\r\n\r\n    function addTasks(title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(id: string, isDone: boolean) {\r\n        let task = tasks.find(t => t.id === id)\r\n        if (task) {  //псевдо истина/псевдо ложь это выражение\r\n            task.isDone = isDone;\r\n        }\r\n        setTasks([...tasks])\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist todolistTitle=\"What to learn\"\r\n                      button=\"Add\"\r\n                      tasks={tasksForTodoList}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTasks={addTasks}\r\n                      changeStatus={changeStatus}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}